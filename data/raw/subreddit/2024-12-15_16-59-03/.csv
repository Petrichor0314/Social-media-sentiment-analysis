Subreddit,Post Title,Comment
programming,The State of the Subreddit (May 2024),"Graphite.dev ""articles"" can get in the bin too please, all also under the banner of advertising.


At least most of Auth0's articles are mostly applicable to all OAuth implementations."
programming,The State of the Subreddit (May 2024),I think there should be a rule that posts about articles/papers/etc. older than a few years should indicate the year in the title.
programming,The State of the Subreddit (May 2024),I still can't differentiate between this sub and r/coding due to the similar (spammy-ish) posts on both subs. These new rules hopefully can increase the quality of this sub!
programming,The State of the Subreddit (May 2024),"Thanks for being transparent about your decision-making, I think these are good changes"
programming,The State of the Subreddit (May 2024),"""To post is human, to lurk divine."""
programming,"Mozilla Firefox removes ""Do Not Track"" Feature support: Here's what it means for your Privacy",Saved you a click: Mozilla no longer believes the DNT header is being respected by most sites and its use is neutral-to-bad. They are implementing an alternative control called GPC that is more respected because it is legally enforced in some jurisdictions. This is enabled in Firefox by checking “Tell websites not to sell or share my data” in settings.
programming,"Mozilla Firefox removes ""Do Not Track"" Feature support: Here's what it means for your Privacy","I'd kind of like a feature where I could toggle a button that was kind of like private browsing mode, except it wipes any cookies, local storage, sessions n storage etc set by a site when I browse away from it and doesn't require opening an entire private instance, and also remembers the toggle so when I come back to the site I don't have to toggle it again. Kind of an ""untrusted sites"" mode (like the domain security zones of old IE lol)"
programming,The No-Feedback Rejection Stings,"I didn't read the whole article, but I have done my share of interviewing for a few places. The reason you don't get much, if any, post rejection feedback is because it's a huge liability. If anything said can be interpreted as favouritism or discrimination then you get a lawsuit. It's basically that simple. Why risk it when you can have a blanket no contact policy?"
programming,The No-Feedback Rejection Stings,"Most of the modern SE interview process is a huge circlejerk.

It's like standardised testing, if you know the pattern you can pretty much guarantee yourself a pass.

Feedback is often useless in these scenarios because it is heavily opinionated. So they either like you or they don't, that's really what it boils down to. Feedback in some countries like the USA can lead to legal liabilities also.

There are countless examples of individuals that are brilliant but get rejected everywhere. They go to fund their own startup and absolutely kill it."
programming,The No-Feedback Rejection Stings,"From far away, I thought this was about dating apps."
programming,The No-Feedback Rejection Stings,"> Have you had a similar experience? Share your story where you didn’t receive feedback after interviews.

I regret to inform you that it is my policy not share such feedback"
programming,The No-Feedback Rejection Stings,"I get this sucks but this is 100% a legal-motivated decision for them. If they share feedback, and someone says the wrong thing, they could end up getting sued by a candidate for discrimination. They could end up with their name in the news for it. Even if nothing comes of it, they'll have to spend time and money dealing with it. Much easier to just tell everyone to keep quiet. The devs and managers may want to give feedback personally, but it's likely not allowed. It's not really the company's job to help you improve your interviewing skills."
programming,Tech Notes: The Jujutsu version control system,"""we don't have branches...""


""But we have change sets with random characters for names and this is somehow not a branch and better than user readable names""


""I have a PR out for some-feature-branch"" is somehow worse than ""I have a PR out for xhejnebfn""


Seems weird."
programming,Tech Notes: The Jujutsu version control system,"So if I pull the latest and just start editing is the default behaviour that it's going to amend the last commit?

If so, that's really bad. Anyone not familiar with the source control system is going to end up unintentionally rewriting the history or, even worse, multiple on a team are at the same time.

If not, how does it tell the difference between the current commit being the one I want to work on vs one I was to preserve? Author?"
programming,Tech Notes: The Jujutsu version control system,"From the article:

> Perhaps unlike   the others, my goal is this is high-level enough to read and think about, without providing so much detail that it washes over you.

>  **The big idea: everything is commits**
>
> The purpose if a version control system is to keep track of the history of your code. But interestingly, as soon as you edit a file locally in your working copy, that new history (""I have edited file X starting on version Y"") is in a kind of limbo state outside of the system and managed separately."
programming,A simple virtual computer to practice writing compilers (crosspost),"Whenever I see a toy virtual 16-bit computer (esp everything is an unsigned 16-bit), I immediately assume The Elements of Computing Systems aka Nand2Tetris. That looks like a superficial coincidence in this case. No registers, different memory handling, wildly different opcodes. What an interesting project."
programming,Understanding Round Robin DNS,"I love this testing methodology. And it got a direct response from important people at Cloudflare, so cool to see"
programming,Software is Way Less Performant Today,"Performance should be a feature.

In my work I routinely make things faster, both my code and that of others. I find it a really satisfying problem domain and customers love it.

At one job I was profiling some code and noticed some inefficiency in the spell checker. Nothing major, a few imperceptible fractions of a second on my development machine, but the issue was clear so I just fixed it and moved on. At the next user group meeting everyone was saying ""I don't know what you did but the app is so much faster and it’s just wonderful"". I really like it when customers are happy like that."
programming,Software is Way Less Performant Today,"What is actually slowing incredibly poor design decisions, combined with building on abstractions built on abstractions built on abstractions without ever understanding that anything you’re doing underneath is doing too. 

I work in c++, and a few years ago, I worked on a project where I added support for dumping the current state to a file in json. 2 years pass and it takes about 10 seconds to start the app up. 

I run the profiler, turns out that someone had been tasked to make it restore previous state, and someone else had been tasked to return a “scratch” if unsaved. The implementation involved loading the entire last project, and the entire “last know state”, diffing the result, and then re-loading the entire state that we wanted to use. The bottleneck in it? Parsing 200MB of floats from json because someone else had stored height map data and chosen a default size that resulted in each save file being 200MB. It was also mostly  “0.0”, “0.0”

I replaced the “save height map” and “load height map” to JSON functions with a base64 encoded blob (the values were integers between 0 and 256), which reduced the size by a factor of 5, and brought the loading time back down to sub second. 

Anyone could have done this, anyone could have looked into it, but we bolted features on top of features and built something “maintainable” that wasn’t fit for purpose."
programming,Software is Way Less Performant Today,"If I press the windows button on my 16 core 64gb laptop, Windows 11 pauses for half a second before rendering the start menu. This was a solved problem 25 years ago.

I'm tired, boss."
programming,Software is Way Less Performant Today,MS Teams is the most counterproductive software I have ever used
programming,Software is Way Less Performant Today,"It’s the same issue with Xcode. Over the years it’s gotten progressively slower (and buggier too, but that’s a separate rant). It got to the point where I’d have a better user experience working on the same projects on my old 2014 MacBook Air using an older version of Xcode, than I did on my 2018 Mac Mini (3.2GHz 6-core i7, 32GB RAM) using a later version of Xcode. And the problem is that it’s not just new features, the performance regressions are seen in the old features, like having to wait +10s (sometimes seemingly forever) for autocomplete suggestions to appear, or even noticeable input latency (hit a key and see a delay before the character appears in the code). Yes, upgrading to a more recent machine (“new” base model M3 MacBook Air) has sped things up again, but you shouldn’t need new hardware just to make old features work well again and even then I still see features in macOS that runs slower than it used to.

I think a big part of this problem is just how modern software is developed and what the incentives are. The focus tends to be on getting features out for a new release because that’s where the business incentive is, whereas improving what is already there isn’t given as much attention. Users will put up with buggy slow software. And since many things are kind of slow, it doesn’t really stand out as being slow. Now this isn’t to say that optimisations aren’t being done, or that everything is slow, but there is so much that is."
programming,In Search of a Faster SQLite,"> The benefits become noticeable only at p999 onwards; for p90 and p99, the performance is almost the same as SQLite. (Could it be because they run a single query?)


I'd be more than interested in thorough and more scrutinized testing to see if there's truly a meaningful difference between vanilla SQLite and an asynchronous I/O rewritten build!"
programming,In Search of a Faster SQLite,"> The benefits become noticeable only at p999 onwards; for p90 and p99, the performance is almost the same as SQLite.

There's also a steep increase at 30 tenants, where before that, SQLite performance was onpar with the Rust version, and after that SQLite performance does not appear to degrade, up to 100 tenants. That indicates that there's something that's not well understood going on, it's not just async IO performing better.

They mention they use a single Thread per SQLite tenant. Here's an ""obvious"" explanation that I suppose they think is what happening, but can't explain the data: SQLite only fetches from disk when its current page, loaded in memory, is exhausted. The initial page fetch is the slowest, but probably has the same performance whether you use blocking IO or async (correct me if I'm wrong), which explains why up to P99 performance is equivalent. At 30 concurrent SQLite instances, blocking page fetches finally hit a point where multiple page fetches interleave (if they were fast enough relative to the rest of the workload, they may not have been interleaving up to that point), delaying each other as they overload the kernel with system calls.

However, this explanation cannot account for the fact that the latency seems to be about the same at 30 and 100 multitenants?!

When this kind of thing happens , it's always because we're missing something: there must be a hidden factor here that would logically explain why the data looks like it does, and I hope I illustrated how the above explanation couldn't do that."
programming,In Search of a Faster SQLite,Duckdb?
programming,In Search of a Faster SQLite,I'd wish postgresql would also occupy that niche - e. g. one variant that is the default big postgresql and then one that competes with sqlite too. For larger datasets I also found postgresql to be faster than sqlite (I recall insert-statements in particular therein). Would be great if postgresql could focus on both niches.
programming,In Search of a Faster SQLite,So it's a linux only rewrite that no one asked for using io_urings which many servers disable. Got it
programming,The Interstice Challenge,"The challenge ends on **January 1, 2025, at 00:00 UTC**."
